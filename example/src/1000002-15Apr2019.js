var React = require('react');var ReactDOM = require('react-dom');var ImageMapper = require('../../src/ImageMapper'); import { Router, browserHistory } from 'react-router';var MAP ={	name: 'my-map',	areas:[		{'name':'BA-1000002-C1' , href:'#BA-1000002-C1', shape: 'rect', coords: [58,39,90,80], alwaysOn:true , preFillColor: 'rgba(0,255,0, .2)'} , {'name':'BA-1000002-T10' , href:'#BA-1000002-T10', shape: 'rect', coords: [124,256,158,297], alwaysOn:true , preFillColor: 'rgba(0,255,0, .2)'} , {'name':'BA-1000002-V2' , href:'#BA-1000002-V2', shape: 'rect', coords: [63,327,110,380], alwaysOn:true , preFillColor: 'rgba(0,255,0, .2)'} , {'name':'BA-1000002-T1' , href:'#BA-1000002-T1', shape: 'rect', coords: [123,343,164,386], alwaysOn:true , preFillColor: 'rgba(0,255,0, .2)'} , {'name':'BA-1000002-V3' , href:'#BA-1000002-V3', shape: 'rect', coords: [5,327,53,384], alwaysOn:true , preFillColor: 'rgba(0,255,0, .2)'} , {'name':'BA-1000002-V1' , href:'#BA-1000002-V1', shape: 'rect', coords: [77,224,109,308], alwaysOn:true , preFillColor: 'rgba(0,255,0, .2)'} , {'name':'BA-1000002-T4' , href:'#BA-1000002-T4', shape: 'rect', coords: [376,344,417,386], alwaysOn:true , preFillColor: 'rgba(0,255,0, .2)'} , {'name':'BA-1000002-T5' , href:'#BA-1000002-T5', shape: 'rect', coords: [382,262,412,304], alwaysOn:true , preFillColor: 'rgba(0,255,0, .2)'} , {'name':'BA-1000002-P1' , href:'#BA-1000002-P1', shape: 'rect', coords: [452,337,494,384], alwaysOn:true , preFillColor: 'rgba(0,255,0, .2)'} , {'name':'BA-1000002-T2' , href:'#BA-1000002-T2', shape: 'rect', coords: [176,342,215,387], alwaysOn:true , preFillColor: 'rgba(0,255,0, .2)'} , {'name':'BA-1000002-S1' , href:'#BA-1000002-S1', shape: 'rect', coords: [303,3,419,59], alwaysOn:true , preFillColor: 'rgba(0,255,0, .2)'} , {'name':'BA-1000002-V4' , href:'#BA-1000002-V4', shape: 'rect', coords: [7,223,42,308], alwaysOn:true , preFillColor: 'rgba(0,255,0, .2)'} , {'name':'BA-1000002-T3' , href:'#BA-1000002-T3', shape: 'rect', coords: [298,349,336,384], alwaysOn:true , preFillColor: 'rgba(0,255,0, .2)'} , {'name':'BA-1000002-S2' , href:'#BA-1000002-S2', shape: 'rect', coords: [465,52,499,94], alwaysOn:true , preFillColor: 'rgba(0,255,0, .2)'} , {'name':'BA-1000002-T8' , href:'#BA-1000002-T8', shape: 'rect', coords: [207,250,229,313], alwaysOn:true , preFillColor: 'rgba(0,255,0, .2)'} , {'name':'BA-1000002-T9' , href:'#BA-1000002-T9', shape: 'rect', coords: [167,255,198,297], alwaysOn:true , preFillColor: 'rgba(0,255,0, .2)'} , {'name':'BA-1000002-T6' , href:'#BA-1000002-T6', shape: 'rect', coords: [330,263,363,306], alwaysOn:true , preFillColor: 'rgba(0,255,0, .2)'} , {'name':'BA-1000002-P2' , href:'#BA-1000002-P2', shape: 'rect', coords: [520,301,572,356], alwaysOn:true , preFillColor: 'rgba(0,255,0, .2)'} , {'name':'BA-1000002-T7' , href:'#BA-1000002-T7', shape: 'rect', coords: [293,252,313,314], alwaysOn:true , preFillColor: 'rgba(0,255,0, .2)'} , 			]};var URL = 'http://199.180.133.121/imagemap/layoutimage/1000002.png'; var App = React.createClass({	getInitialState() {		return { hoveredArea: null, msg: null, moveMsg: null };	},	load() {		this.setState({ msg: 'Interact with image !' }); 	},		clicked(area) {		this.setState({ msg: `You clicked on ${area.href} at coords ${JSON.stringify(area.coords)} !`});			},	clickedOutside(evt) {		const coords = {x: evt.nativeEvent.layerX, y: evt.nativeEvent.layerY };		this.setState({ msg: `You clicked on the image at coords ${JSON.stringify(coords)} !` });	},	moveOnImage(evt) {		const coords = {x: evt.nativeEvent.layerX, y: evt.nativeEvent.layerY };		this.setState({ moveMsg: `You moved on the image at coords ${JSON.stringify(coords)} !` });	},	enterArea(area) {		this.setState({ hoveredArea: area, msg: `You entered ${area.shape} ${area.name} at coords ${JSON.stringify(area.coords)} !` });	},	leaveArea(area) {		this.setState({ hoveredArea: null, msg: `You leaved ${area.shape} ${area.name} at coords ${JSON.stringify(area.coords)} !` });	},	moveOnArea(area, evt) {		const coords = {x: evt.nativeEvent.layerX, y: evt.nativeEvent.layerY };		this.setState({ moveMsg: `You moved on ${area.shape} ${area.name} at coords ${JSON.stringify(coords)} !` });	},	getTipPosition(area) {		return { top: `${area.center[1]}px`, left: `${area.center[0]}px` };	},	render () {		return (						<div className='grid'>			<script src="https://cdnjs.cloudflare.com/ajax/libs/babel-core/5.8.24/browser.min.js"></script>				<div className="presenter">					<div style={{ position: 'relative' }}>						<ImageMapper src={URL} map={MAP} 							onLoad={() => this.load()}							onClick={area => this.clicked(area)}							onMouseEnter={area => this.enterArea(area)}							onMouseLeave={area => this.leaveArea(area)}							onMouseMove={(area, _, evt) => this.moveOnArea(area, evt)}							onImageClick={evt => this.clickedOutside(evt)}							onImageMouseMove={evt => this.moveOnImage(evt)}						/>										</div> 									</div>						</div>		);	}});ReactDOM.render(<App />, document.getElementById('app'));