var React = require('react');var ReactDOM = require('react-dom');var ImageMapper = require('../../src/ImageMapper'); import { Router, browserHistory } from 'react-router';var MAP ={	name: 'my-map',	areas:[		{'name':'HOOT-1000000-D14' , href:'#HOOT-1000000-D14', shape: 'rect', coords: [363,191,390,212], alwaysOn:true , preFillColor: 'rgba(0,255,0, .2)'} , {'name':'HOOT-1000000-D15' , href:'#HOOT-1000000-D15', shape: 'rect', coords: [361,222,390,243], alwaysOn:true , preFillColor: 'rgba(0,255,0, .2)'} , {'name':'HOOT-1000000-D16' , href:'#HOOT-1000000-D16', shape: 'rect', coords: [363,253,391,273], alwaysOn:true , preFillColor: 'rgba(0,255,0, .2)'} , {'name':'HOOT-1000000-D17' , href:'#HOOT-1000000-D17', shape: 'rect', coords: [364,286,391,307], alwaysOn:true , preFillColor: 'rgba(0,255,0, .2)'} , {'name':'HOOT-1000000-D10' , href:'#HOOT-1000000-D10', shape: 'rect', coords: [362,126,391,163], alwaysOn:true , preFillColor: 'rgba(0,255,0, .2)'} , {'name':'HOOT-1000000-D11' , href:'#HOOT-1000000-D11', shape: 'rect', coords: [315,144,346,166], alwaysOn:true , preFillColor: 'rgba(0,255,0, .2)'} , {'name':'HOOT-1000000-D12' , href:'#HOOT-1000000-D12', shape: 'rect', coords: [314,177,346,199], alwaysOn:true , preFillColor: 'rgba(0,255,0, .2)'} , {'name':'HOOT-1000000-D13' , href:'#HOOT-1000000-D13', shape: 'rect', coords: [311,212,343,233], alwaysOn:true , preFillColor: 'rgba(0,255,0, .2)'} , {'name':'HOOT-1000000-B6' , href:'#HOOT-1000000-B6', shape: 'rect', coords: [276,300,295,349], alwaysOn:true , preFillColor: 'rgba(0,255,0, .2)'} , {'name':'HOOT-1000000-D8' , href:'#HOOT-1000000-D8', shape: 'rect', coords: [466,173,492,198], alwaysOn:true , preFillColor: 'rgba(0,255,0, .2)'} , {'name':'HOOT-1000000-B5' , href:'#HOOT-1000000-B5', shape: 'rect', coords: [275,233,296,280], alwaysOn:true , preFillColor: 'rgba(0,255,0, .2)'} , {'name':'HOOT-1000000-D7' , href:'#HOOT-1000000-D7', shape: 'rect', coords: [469,209,488,231], alwaysOn:true , preFillColor: 'rgba(0,255,0, .2)'} , {'name':'HOOT-1000000-B4' , href:'#HOOT-1000000-B4', shape: 'rect', coords: [277,170,296,217], alwaysOn:true , preFillColor: 'rgba(0,255,0, .2)'} , {'name':'HOOT-1000000-D6' , href:'#HOOT-1000000-D6', shape: 'rect', coords: [468,243,492,265], alwaysOn:true , preFillColor: 'rgba(0,255,0, .2)'} , {'name':'HOOT-1000000-D5' , href:'#HOOT-1000000-D5', shape: 'rect', coords: [469,276,489,297], alwaysOn:true , preFillColor: 'rgba(0,255,0, .2)'} , {'name':'HOOT-1000000-B2' , href:'#HOOT-1000000-B2', shape: 'rect', coords: [182,178,235,212], alwaysOn:true , preFillColor: 'rgba(0,255,0, .2)'} , {'name':'HOOT-1000000-D4' , href:'#HOOT-1000000-D4', shape: 'rect', coords: [511,288,560,341], alwaysOn:true , preFillColor: 'rgba(0,255,0, .2)'} , {'name':'HOOT-1000000-B1' , href:'#HOOT-1000000-B1', shape: 'rect', coords: [14,180,67,214], alwaysOn:true , preFillColor: 'rgba(0,255,0, .2)'} , {'name':'HOOT-1000000-D3' , href:'#HOOT-1000000-D3', shape: 'rect', coords: [517,213,561,244], alwaysOn:true , preFillColor: 'rgba(0,255,0, .2)'} , {'name':'HOOT-1000000-D2' , href:'#HOOT-1000000-D2', shape: 'rect', coords: [517,213,561,244], alwaysOn:true , preFillColor: 'rgba(0,255,0, .2)'} , {'name':'HOOT-1000000-D1' , href:'#HOOT-1000000-D1', shape: 'rect', coords: [516,130,564,156], alwaysOn:true , preFillColor: 'rgba(0,255,0, .2)'} , {'name':'HOOT-1000000-B7' , href:'#HOOT-1000000-B7', shape: 'rect', coords: [409,227,444,261], alwaysOn:true , preFillColor: 'rgba(0,255,0, .2)'} , {'name':'HOOT-1000000-D9' , href:'#HOOT-1000000-D9', shape: 'rect', coords: [404,126,448,161], alwaysOn:true , preFillColor: 'rgba(0,255,0, .2)'} , {'name':'HOOT-1000000-K4' , href:'#HOOT-1000000-K4', shape: 'rect', coords: [479,68,526,89], alwaysOn:true , preFillColor: 'rgba(0,255,0, .2)'} , {'name':'HOOT-1000000-K3' , href:'#HOOT-1000000-K3', shape: 'rect', coords: [423,68,459,89], alwaysOn:true , preFillColor: 'rgba(0,255,0, .2)'} , {'name':'HOOT-1000000-DECK6' , href:'#HOOT-1000000-DECK6', shape: 'rect', coords: [419,47,457,60], alwaysOn:true , preFillColor: 'rgba(0,255,0, .2)'} , {'name':'HOOT-1000000-K2' , href:'#HOOT-1000000-K2', shape: 'rect', coords: [372,69,408,90], alwaysOn:true , preFillColor: 'rgba(0,255,0, .2)'} , {'name':'HOOT-1000000-DECK7' , href:'#HOOT-1000000-DECK7', shape: 'rect', coords: [471,47,508,60], alwaysOn:true , preFillColor: 'rgba(0,255,0, .2)'} , {'name':'HOOT-1000000-K1' , href:'#HOOT-1000000-K1', shape: 'rect', coords: [359,91,318,68], alwaysOn:true , preFillColor: 'rgba(0,255,0, .2)'} , {'name':'HOOT-1000000-DECK4' , href:'#HOOT-1000000-DECK4', shape: 'rect', coords: [333,45,365,60], alwaysOn:true , preFillColor: 'rgba(0,255,0, .2)'} , {'name':'HOOT-1000000-DECK5' , href:'#HOOT-1000000-DECK5', shape: 'rect', coords: [375,46,406,61], alwaysOn:true , preFillColor: 'rgba(0,255,0, .2)'} , {'name':'HOOT-1000000-A5' , href:'#HOOT-1000000-A5', shape: 'rect', coords: [176,35,208,57], alwaysOn:true , preFillColor: 'rgba(0,255,0, .2)'} , {'name':'HOOT-1000000-A4' , href:'#HOOT-1000000-A4', shape: 'rect', coords: [137,34,168,57], alwaysOn:true , preFillColor: 'rgba(0,255,0, .2)'} , {'name':'HOOT-1000000-A3' , href:'#HOOT-1000000-A3', shape: 'rect', coords: [87,34,125,56], alwaysOn:true , preFillColor: 'rgba(0,255,0, .2)'} , {'name':'HOOT-1000000-A2' , href:'#HOOT-1000000-A2', shape: 'rect', coords: [48,34,75,59], alwaysOn:true , preFillColor: 'rgba(0,255,0, .2)'} , {'name':'HOOT-1000000-A1' , href:'#HOOT-1000000-A1', shape: 'rect', coords: [15,31,39,58], alwaysOn:true , preFillColor: 'rgba(0,255,0, .2)'} , {'name':'HOOT-1000000-A9' , href:'#HOOT-1000000-A9', shape: 'rect', coords: [69,91,97,128], alwaysOn:true , preFillColor: 'rgba(0,255,0, .2)'} , {'name':'HOOT-1000000-A8' , href:'#HOOT-1000000-A8', shape: 'rect', coords: [106,91,130,128], alwaysOn:true , preFillColor: 'rgba(0,255,0, .2)'} , {'name':'HOOT-1000000-A7' , href:'#HOOT-1000000-A7', shape: 'rect', coords: [139,91,162,126], alwaysOn:true , preFillColor: 'rgba(0,255,0, .2)'} , {'name':'HOOT-1000000-A6' , href:'#HOOT-1000000-A6', shape: 'rect', coords: [175,92,198,127], alwaysOn:true , preFillColor: 'rgba(0,255,0, .2)'} , {'name':'HOOT-1000000-DECK2' , href:'#HOOT-1000000-DECK2', shape: 'rect', coords: [400,8,445,34], alwaysOn:true , preFillColor: 'rgba(0,255,0, .2)'} , {'name':'HOOT-1000000-DECK3' , href:'#HOOT-1000000-DECK3', shape: 'rect', coords: [331,7,376,32], alwaysOn:true , preFillColor: 'rgba(0,255,0, .2)'} , {'name':'HOOT-1000000-DECK1' , href:'#HOOT-1000000-DECK1', shape: 'rect', coords: [478,9,528,38], alwaysOn:true , preFillColor: 'rgba(0,255,0, .2)'} , 			]};var URL = 'http://199.180.133.121/imagemap/layoutimage/1000000.png'; var App = React.createClass({	getInitialState() {		return { hoveredArea: null, msg: null, moveMsg: null };	},	load() {		this.setState({ msg: 'Interact with image !' }); 	},		clicked(area) {		this.setState({ msg: `You clicked on ${area.href} at coords ${JSON.stringify(area.coords)} !`});			},	clickedOutside(evt) {		const coords = {x: evt.nativeEvent.layerX, y: evt.nativeEvent.layerY };		this.setState({ msg: `You clicked on the image at coords ${JSON.stringify(coords)} !` });	},	moveOnImage(evt) {		const coords = {x: evt.nativeEvent.layerX, y: evt.nativeEvent.layerY };		this.setState({ moveMsg: `You moved on the image at coords ${JSON.stringify(coords)} !` });	},	enterArea(area) {		this.setState({ hoveredArea: area, msg: `You entered ${area.shape} ${area.name} at coords ${JSON.stringify(area.coords)} !` });	},	leaveArea(area) {		this.setState({ hoveredArea: null, msg: `You leaved ${area.shape} ${area.name} at coords ${JSON.stringify(area.coords)} !` });	},	moveOnArea(area, evt) {		const coords = {x: evt.nativeEvent.layerX, y: evt.nativeEvent.layerY };		this.setState({ moveMsg: `You moved on ${area.shape} ${area.name} at coords ${JSON.stringify(coords)} !` });	},	getTipPosition(area) {		return { top: `${area.center[1]}px`, left: `${area.center[0]}px` };	},	render () {		return (						<div className='grid'>			<script src="https://cdnjs.cloudflare.com/ajax/libs/babel-core/5.8.24/browser.min.js"></script>				<div className="presenter">					<div style={{ position: 'relative' }}>						<ImageMapper src={URL} map={MAP} 							onLoad={() => this.load()}							onClick={area => this.clicked(area)}							onMouseEnter={area => this.enterArea(area)}							onMouseLeave={area => this.leaveArea(area)}							onMouseMove={(area, _, evt) => this.moveOnArea(area, evt)}							onImageClick={evt => this.clickedOutside(evt)}							onImageMouseMove={evt => this.moveOnImage(evt)}						/>										</div> 									</div>						</div>		);	}});ReactDOM.render(<App />, document.getElementById('app'));